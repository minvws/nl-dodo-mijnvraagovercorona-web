---
import { Mark } from 'astro-portabletext/components';
import { Button } from '@design-system/elements/Button';
import { Link } from '@design-system/elements/Link';
import { type ContentBlockProps } from '..';
import ContentBlock from '../ContentBlock.astro';
import { getLocaleFromURL } from 'src/utilities/locale/translation';
import { type SubFolderReferenceProps } from 'src/utilities/api/queries';
import { getFullPageUrl } from 'src/utilities/helpers/page-subfolder';
import { parseLink } from 'src/utilities/helpers/link';

type Props = Parameters<typeof Mark>[0];

interface MarkProps {
	children: ContentBlockProps['value'];
	type: string;
	node?: {
		style: string;
	};
	mark?: {
		href?: string;
		slugCollection?: {
			slug: string;
			subFolderReference: SubFolderReferenceProps;
		};
		chevron?: boolean;
		internal?: boolean;
		button?: boolean;
	};
}

const props = Astro.props;

const { children, mark } = {
	children: props.node.children,
	mark: props.node.markDef,
	type: props.node.markType,
} as MarkProps;

const locale = getLocaleFromURL(Astro.url.pathname);
const Component = mark.button ? Button : Link;
---

<Component
	href={mark.slugCollection
		? parseLink(getFullPageUrl(mark.slugCollection), locale)
		: mark.href
		? parseLink(mark.href, locale)
		: undefined}
>
	<ContentBlock value={children} />
</Component>
