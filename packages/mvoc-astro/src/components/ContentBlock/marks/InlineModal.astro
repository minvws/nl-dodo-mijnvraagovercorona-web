---
import { Mark } from 'astro-portabletext/components';
import { Modal } from '@design-system/components/Modal';
import Link from '@design-system/elements/Link.astro';
import {
	ImageProps,
	SiteSettingsProps,
	useSiteSettings,
} from 'src/utilities/api/queries';
import { ContentBlockProps } from '..';
import ContentBlock from '../ContentBlock.astro';
import Stack from '@design-system/components/layout/Stack.astro';
import { getLocaleFromURL } from 'src/utilities/locale/translation';

type Props = Parameters<typeof Mark>[0];

interface DialogProps {
	children: any;
	mark: {
		_key: string;
		title: string;
		image: ImageProps;
		content: ContentBlockProps['value'];
	};
}

const props = Astro.props;

const locale = getLocaleFromURL(Astro.url.pathname);
const siteSettings: SiteSettingsProps = await useSiteSettings({ locale });

const { children, mark } = {
	children: props.node.children,
	mark: props.node.markDef,
} as DialogProps;

console.log('children', children);
---

<Link
	id={`inline-modal-${mark._key}`}
	variant="tooltip"
	hiddenLabel={siteSettings.accessibility.labelModal}
	><ContentBlock value={children} />
</Link>
<Modal
	id={`inline-modal-${mark._key}`}
	title={mark.title}
	closeLabel={siteSettings.accessibility.labelModalClose}
>
	<Stack>
		{mark.image?.src ? <img src={mark.image.src} alt="" /> : null}
		<ContentBlock value={mark.content} />
	</Stack>
</Modal>
