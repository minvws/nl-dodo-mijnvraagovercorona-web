---
import { Chapeau } from '@design-system/elements/Chapeau';
import { Heading } from '@design-system/elements/Heading';
import { ImageProps } from 'src/utilities/api/queries';
import { Retain } from '@design-system/components/Layout/Retain';
import { Stack } from '@design-system/components/Layout/Stack';
import { Switcher } from '@design-system/components/Layout/Grid';
import { UpdatedAt } from '@design-system/elements/UpdatedAt';

interface Props {
	title: string;
	titleSuffix?: string;
	chapeau?: string;
	image?: ImageProps;
	highlight?: boolean;
	updatedAt?: string;
	cards?: boolean;
}

const { title, titleSuffix, chapeau, image, highlight, cards, updatedAt } =
	Astro.props;
---

<header
	class={`c-hero${highlight ? ` c-hero--highlight` : ''}
	${cards ? ` c-hero--cards` : ''}`}
>
	<Retain>
		<Switcher class="c-hero__switcher">
			{
				image && image.src ? (
					<div class="c-hero__wrap-image">
						<img class="c-hero__image" src={image.src} alt="" />
					</div>
				) : null
			}
			<Stack gap={'small'}>
				<hgroup class="c-hero__hgroup">
					<Heading class="c-hero__title" level={1}>
						{title}{
							titleSuffix ? (
								<>
									{' '}
									<span class="c-hero__title-suffix">{titleSuffix}</span>
								</>
							) : (
								''
							)
						}
					</Heading>
					{updatedAt ? <UpdatedAt time={updatedAt} /> : null}

					<slot name="prefix" />
					{
						chapeau ? (
							<Chapeau
								class="c-hero__chapeau"
								variant={highlight ? 'highlight' : 'base'}
								role="presentation"
							>
								{chapeau}
							</Chapeau>
						) : null
					}
				</hgroup>
				<slot />
			</Stack>
		</Switcher>
	</Retain>
</header>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';

	.c-hero {
		--hero-background: var(--theme-bg-base);
		--hero-padding: var(--stack-hero);
		--hero-padding-block-start: var(--hero-padding);
		--hero-padding-block-end: var(--hero-padding);
		position: relative;
		padding-block-start: var(--hero-padding-block-start);
		padding-block-end: var(--hero-padding-block-end);
		color: var(--color-donkerblauw);
		background-color: var(--hero-background);

		.c-hero__switcher {
			--switcher-align-items: center;
		}
	}

	.c-hero__wrap-image {
		@media --mq-large {
			order: 2;
		}
	}
	.c-hero__image {
		block-size: 8rem; // 160px
		max-inline-size: 13.6rem; // 272px
		margin-inline: auto;
		object-fit: contain;

		@media --mq-large {
			block-size: 11.2rem; // 224px
			max-inline-size: 100%;
		}
	}

	.c-hero__hgroup {
		display: flex;
		flex-direction: column;
		gap: var(--stack-small);
	}

	.c-hero__title {
		order: 3;
	}

	.c-hero__title-suffix {
		display: inline-block;
		padding-block: var(--space-r-nano);
		padding-inline: var(--space-s-small);
		background-color: var(--color-white);
		border-radius: var(--space-r-nano);
	}

	.c-hero__chapeau {
	}

	// Variants
	.c-hero--highlight {
		--hero-background: var(--theme-bg-highlight);
		--hero-border-radius: var(--radii-huge);
		--hero-padding-block-start: 0px;
		border-end-start-radius: var(--hero-border-radius);
		border-end-end-radius: var(--hero-border-radius);

		.c-hero__chapeau {
			--chapeau-font-size: var(--font-size-beta);
			--chapeau-line-height: var(--line-height-beta);
		}

		@media --mq-large {
			--hero-padding-block-start: var(--hero-padding);
		}

		.c-hero__image {
			block-size: 12rem; // 240px

			@media --mq-large {
				block-size: 20rem; // 400px
			}
		}
	}
	.c-hero--cards {
		--hero-padding-block-end: calc(var(--hero-padding) * 2);

		@media --mq-large {
			--hero-padding-block-end: calc(var(--hero-padding) * 3);
		}
	}
</style>
