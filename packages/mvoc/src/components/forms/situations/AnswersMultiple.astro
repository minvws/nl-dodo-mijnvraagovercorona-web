---
import Submit from './Submit.astro';
import { moduleName as AnswersMultipleModuleName } from './AnswersMultiple';
import { Control } from '@design-system/elements/Control';
import { Stack } from '@design-system/components/Layout/Stack';
import {
	Disclosure,
	DisclosureItem,
} from '@design-system/components/Disclosure';
import { AssistanceProps } from 'src/utilities/api/queries/translated/assistance';
import { getDaysToGenerate } from 'src/utilities/helpers/advice-helpers';
import { QuestionPageProps } from 'src/utilities/api';

export interface Props {
	answers: QuestionPageProps['question']['multiple'];
	buttons: QuestionPageProps['buttons'];
	showMore: QuestionPageProps['question']['showMore'];
	assistance?: AssistanceProps;
	label?: string;
}

const { answers, buttons, showMore, assistance, label } = Astro.props;

const split = showMore?.max || 6;

// Split items into 2 groups
const firstGroup = answers.slice(0, split ? split : answers.length);
const secondGroup = answers.slice(
	split ? split : answers.length,
	answers.length,
);

let daysToGenerate = [] as number[];

const parsedButtons = buttons?.map((button, index) => {
	if (index === 0 && button.standard) {
		daysToGenerate = getDaysToGenerate(button.next);
	}
	return index === 0 && button.standard
		? { ...button, disabled: true }
		: {
				...button,
		  };
});
---

<form
	method="get"
	data-module={AnswersMultipleModuleName}
	data-max-days={daysToGenerate.length}
>
	<Stack>
		<fieldset>
			{label ? <legend class="u-visually-hidden">{label}</legend> : null}
			<Stack gap="small">
				<Stack gap="small">
					{
						firstGroup.map(({ content, _key }) => (
							<Control
								type="checkbox"
								name={AnswersMultipleModuleName}
								id={_key}
								value={content}
								variant="tile"
							>
								{content}
							</Control>
						))
					}
				</Stack>
				{
					secondGroup.length ? (
						<Disclosure>
							<DisclosureItem
								label={showMore.label.this}
								labelActive={showMore.label.that}
							>
								<Stack gap="small">
									{secondGroup.map(({ content, _key }) => (
										<Control
											type="checkbox"
											name={AnswersMultipleModuleName}
											id={_key}
											value={content}
											variant="tile"
										>
											{content}
										</Control>
									))}
								</Stack>
							</DisclosureItem>
						</Disclosure>
					) : null
				}
			</Stack>
		</fieldset>

		<Submit buttons={parsedButtons} assistance={assistance} />
	</Stack>
</form>

<script>
	import { initAnswersMultiple } from './AnswersMultiple';
	initAnswersMultiple();
</script>
