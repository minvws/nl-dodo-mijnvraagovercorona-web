---
import { Button } from '@design-system/elements/Button';
import { Icon } from '@design-system/elements/Icon';
import { HTMLAttributes } from 'astro/types';
import { MediaBlock } from '../MediaBlock';
import { Heading } from '@design-system/elements/Heading';
import { ImageProps } from 'src/utilities/api/queries';

interface Props extends HTMLAttributes<'li'> {
	label: string;
	labelActive?: string;
	headingLevel?: 1 | 2 | 3 | 4 | 5 | 6;
	headingStyledAs?: 1 | 2 | 3 | 4 | 5 | 6;
	accordeon?: boolean;
	adviceBlock?: boolean;
	image?: ImageProps;
}

const {
	label,
	labelActive,
	accordeon,
	adviceBlock,
	image,
	headingLevel = 3,
	headingStyledAs = 3,
	...attrs
} = Astro.props;
---

<li
	class={`disclosure__item ${accordeon ? 'disclosure__item--accordeon' : ''}`}
	data-module-bind="disclosure__item"
	{...attrs}
>
	<Heading
		level={headingLevel}
		styledAs={headingStyledAs}
		class="disclosure__heading"
		itemprop="name"
	>
		{
			accordeon ? (
				<>
					<Button
						id="disclosure-header-1"
						class={`disclosure__toggle--button${
							adviceBlock ? ' advice-block__button' : ''
						}`}
						aria-expanded="false"
						aria-controls="disclosure-panel-1"
						data-module-bind="disclosure__toggle"
						variant={adviceBlock ? 'tertiary' : 'quaternary'}
						icon="chevron-small-down"
						full
						iconPosition="trailing"
					>
						{adviceBlock ? (
							<MediaBlock icon={image} class="c-advice-block__media-heading">
								{label}
							</MediaBlock>
						) : (
							<span>{label}</span>
						)}
					</Button>
				</>
			) : (
				<button
					type="button"
					id="disclosure-header-1"
					class="disclosure__toggle"
					aria-expanded="false"
					aria-controls="disclosure-panel-1"
					data-module-bind="disclosure__toggle"
				>
					<Icon name="plus" class="disclosure__show-inactive" />
					<Icon name="minus" class="disclosure__show-active" />
					<span class={labelActive ? 'disclosure__show-inactive' : undefined}>
						{label}
					</span>
					{labelActive ? (
						<span class="disclosure__show-active">{labelActive}</span>
					) : null}
				</button>
			)
		}
	</Heading>
	<div
		id="disclosure-panel-1"
		role="region"
		class="disclosure__panel"
		data-module-bind="disclosure__panel"
		aria-labelledby="disclosure-header-1"
		itemscope
		itemprop="acceptedAnswer"
		itemtype="https://schema.org/Answer"
	>
		<div
			class="disclosure__panel-inner"
			data-module-bind="disclosure__panel-inner"
			itemprop="text"
		>
			<slot />
		</div>
	</div>
</li>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';
	@use '@design-system-styles/tools/_a11y.scss';

	.disclosure__heading {
	}
	.disclosure__item,
	.disclosure__toggle {
		width: 100%;
	}

	.disclosure__toggle {
		display: flex;
		align-items: center;
		gap: var(--space-3);
		color: var(--color-accent-robijnrood);
		cursor: pointer;

		&:focus {
			@include a11y.focusring;
		}
	}

	.disclosure__show-inactive {
	}

	/**
	 * TODO: increased specificity by 0,1,0 to battle loading order issues in Astro
	 */
	.disclosure__show-active.disclosure__show-active {
		display: none;
	}

	.disclosure__panel {
		--_disclosure__panel-padding: var(
			--disclosure__panel-padding,
			var(--space-6)
		);
		--disclosure__panel--spacing: calc(
			var(--_disclosure__panel-padding) - var(--card-border-width)
		);
		block-size: 0;
		padding-inline: var(--disclosure__panel--spacing);
		overflow: hidden;
		opacity: 0;
		visibility: hidden;
		transition: all 0.3s ease-in-out;
	}

	.disclosure__panel-inner {
		padding-block-start: var(--space-4);
	}

	.disclosure__item.is-active {
		.disclosure__panel {
			opacity: 1;
			visibility: visible;
		}
		.disclosure__show-inactive {
			display: none;
		}
		.disclosure__show-active {
			display: block;
		}
	}

	.disclosure__item--accordeon {
		& + & {
			margin-block-start: var(--space-4);
		}

		.disclosure__panel-inner {
			padding-block-end: var(--_disclosure__panel-padding);

			@media --mq-large {
				padding-block-start: 0;
			}
		}

		.disclosure__toggle--button {
			--button-color: var(--color-diepblauw);
			&:hover {
				--button-background-color: var(--color-poolblauw);
			}

			&:active {
				--button-border-color: var(--color-poolblauw);
			}

			:global(.e-icon) {
				transition: transform 0.3s;
			}

			&[aria-expanded='true'] {
				--button-background-color: var(--color-poolblauw);
				:global(.e-icon) {
					transform: rotate(180deg);
				}
			}
		}

		.advice-block__button {
			--button-border-color: none;
			--button-font-size: inherit;
			--button-line-height: inherit;
			--button-background-color: transparent;
			&[aria-expanded='true'] {
				--button-background-color: none;
			}
			&[tabindex='-1'] {
				pointer-events: none;
				:global(.e-icon) {
					display: none;
				}
			}
			&:active,
			&:hover {
				--button-border-color: none;
				--button-background-color: none;
			}
		}
	}
</style>
