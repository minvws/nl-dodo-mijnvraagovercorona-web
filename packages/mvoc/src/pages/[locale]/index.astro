---
import Layout from '../../layouts/Layout.astro';
import {
	availableLocales,
	Locale,
	prefixUrlWithlocale,
} from 'src/utilities/locale/translation';
import { getDataHome, PageHomeProps } from 'src/utilities/api';
import { Hero } from '@design-system/components/Hero';
import { Layer } from '@design-system/components/Layout/Layer';
import { Retain } from '@design-system/components/Layout/Retain';
import { Stack } from '@design-system/components/Layout/Stack';
import { SectionHeadingGroup } from '@design-system/components/SectionHeadingGroup';
import { ContentBlock } from '@design-system/components/ContentBlock';
import { GridFluid } from '@design-system/components/Layout/Grid';
import { Button } from '@design-system/elements/Button';
import { ThemeOverview } from '@design-system/components/ThemeOverview';
import { stringToSlug } from 'src/utilities/stringToSlug';
import { Assistance } from '@design-system/components/Assistance';
import { Card } from '@design-system/components/Card';
import { Heading } from '@design-system/elements/Heading';

export async function getStaticPaths() {
	const collection = await getDataHome();
	return collection.map((page: PageHomeProps) => ({
		params: {
			locale: page.localeID,
		},
		props: {
			pagesData: collection,
			locale: availableLocales.filter(
				(locale) => locale.id === page.localeID,
			)[0],
		},
	}));
}

interface Props {
	locale: Locale;
	pagesData?: PageHomeProps[];
}

const { locale, pagesData } = Astro.props;

// Get pagedata based on locale
const pageData: PageHomeProps = pagesData.filter(
	(page) => page.localeID === locale.id,
)[0];

console.log(pagesData);
---

<Layout
	locale={locale}
	metaData={pageData.metaData}
	skipPageSuffix
	mastheadHighlight
	alternativeTranslations={pageData.alternatives}
>
	<Hero
		title={pageData.hero.title}
		chapeau={pageData.hero.chapeau}
		image={pageData.hero.image}
		highlight
	>
		<ContentBlock value={pageData.hero.content} />
		<Button
			iconPosition="trailing"
			variant={'secondary'}
			icon={pageData.button.icon}
			href={prefixUrlWithlocale(`/`, locale)}
		>
			{pageData.button.label}
		</Button>
	</Hero>

	<!-- Belangrijke sitaties block. 
		TO DO: 
		- data from new api query 
	-->

	<Layer pullUpBy="hero" background="ijsblauw">
		<Retain>
			<Stack gap="huge">
				<SectionHeadingGroup title={'Op dit moment belangrijk'}>
					Situaties waar veel mensen nu mee te maken hebben
				</SectionHeadingGroup>
				<GridFluid class="grid-important">
					<Button
						variant="tertiary"
						icon="chevron-small-right"
						interactionIconAnimation="swing"
					>
						Button text
					</Button>
					<Button
						variant="tertiary"
						icon="chevron-small-right"
						interactionIconAnimation="swing"
					>
						Button text
					</Button>
				</GridFluid>
			</Stack>
		</Retain>
	</Layer>

	<!-- Advies blok. 
		TO DO: 
		- data from new api query 
		- new card component
	-->

	<Layer pullUpBy="layer">
		<Retain>
			<Stack gap="huge">
				<SectionHeadingGroup title={'Welke adviezen zijn er nu precies?'}>
					Dit is een ondertitel over adviezen.
				</SectionHeadingGroup>
				<GridFluid class="grid-important">
					<Card variant="filled">
						<Heading>Dit is een titel</Heading>
						<span>
							Houdt u zich ook aan onderstaande hygiÃ«ne-adviezen, om zo ook
							andere infectieziekten, zoals griep en verkoudheid, te voorkomen.
						</span>
						<ul>
							<li>
								<span>Titel van een item</span>
							</li>
							<li>
								<span>Titel van een item</span>
							</li>
							<li>
								<span>Titel van een item</span>
							</li>
						</ul>
					</Card>
					<Card variant="filled">
						<Heading>Dit is een titel</Heading>
						<span>
							Het corona virus heeft een dalende trend, dat betekent dat vanaf
							dd-mm-yyyy de volgende maatregelen niet meer nodig zijn.
						</span>
						<ul>
							<li>
								<span>Titel van een item</span>
							</li>
							<li>
								<span>Titel van een item</span>
							</li>
							<li>
								<span>Titel van een item</span>
							</li>
						</ul>
					</Card>
				</GridFluid>
			</Stack>
		</Retain>
	</Layer>

	<!-- Assistance block. 
		TO DO: 
		- assistannce block
	-->

	<!-- {
		pageData.assistance && (
			<Layer id={stringToSlug(pageData.assistance.headline)}>
				<Retain>
					<Assistance feedback {...pageData.assistance} />
				</Retain>
			</Layer>
		)
	} -->
</Layout>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';

	.grid-important {
		--grid-fluid-min-item-size: 20rem; // 400px
		--grid-fluid-gap: var(--stack-small);
	}
</style>
