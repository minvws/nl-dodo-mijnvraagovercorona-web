---
import 'dotenv-flow/config';
import { Sprite } from 'astro-icon';
import MetaData from 'src/components/MetaData.astro';
import { MetaDataProps } from 'src/utilities/api/queries';
import { SiteSettingsProps, useSiteSettings } from 'src/utilities/api/queries';
import { Locale } from 'src/utilities/locale/translation';

import '@design-system/globals.scss';
import { Masthead, SkipLink } from '@design-system/components/Masthead';
import {
	AlternativeTranslationsProps,
	LocaleSelector,
} from '@design-system/components/LocaleSelector';
import { MastFoot } from '@design-system/components/MastFoot';
import { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'html'> {
	type?: string;
	locale: Locale;
	alternativeTranslations?: AlternativeTranslationsProps[];
	metaData: MetaDataProps;
	skipPageSuffix?: boolean;
	mastheadHighlight?: boolean;
	disableMasthead?: boolean;
	disableMastfoot?: boolean;
}

const {
	type,
	locale,
	metaData,
	skipPageSuffix,
	mastheadHighlight,
	alternativeTranslations,
	disableMasthead,
	disableMastfoot,
	...attrs
} = Astro.props;
const siteSettings: SiteSettingsProps = await useSiteSettings({
	locale,
});
---

<!DOCTYPE html>
<html
	{...attrs}
	lang={locale.id}
	dir={locale.direction}
	data-page-type={type}
	data-page-pathname={Astro.url.pathname}
>
	<head>
		<MetaData
			{...metaData}
			locale={locale}
			skipPageSuffix={skipPageSuffix}
			alternativeTranslations={alternativeTranslations}
		/>
		<style lang="scss" is:global>
			@use '@design-system-styles/primitives/_responsive.scss';
			@use '@design-system-styles/tools/_a11y.scss';

			:where(body) {
				display: flex;
				flex-direction: column;
				@media --mq-large-until {
					background-color: var(--color-donkerblauw);
				}

				&[data-environment]::after {
					position: fixed;
					inset-block-end: 0;
					inset-inline-end: 0;
					padding-block: 0.25em;
					padding-inline: 0.5em;
					content: attr(data-environment);
					z-index: 1000;
					background-color: #ff4013;
				}

				&[data-environment='staging']::after {
					background-color: #fffc41;
				}
			}

			:where(main) {
				position: relative;
				z-index: 2;
				display: flex;
				flex-direction: column;
				flex: 1;
				background-color: var(--color-white);

				@media --mq-large-until {
					transition-property: scale, translate, border-radius, box-shadow;
					transition-duration: 0.2s;
					transition-timing-function: ease-out;
					transform-origin: top right;
				}

				.has-open-menu & {
					@media --mq-large-until {
						scale: 0.71;
						translate: calc(
								(var(--theme-main-menu-open-size) + var(--space-6) * 2) * -1
							)
							calc(var(--theme__masthead-top-block-size) + var(--space-6));
						block-size: var(--body-block-size);
						overflow: hidden;
						border-radius: var(--radii-base);
						box-shadow: 0px 0px 27px rgba(0 0 0 / 26%);

						a,
						button {
							pointer-events: none;
						}
					}
				}
			}
			:lang(ar) {
				.e-link__label {
					text-underline-offset: var(--space-s-nano);
				}
			}
		</style>
	</head>
	<body
		data-environment={import.meta.env.MODE === 'production' &&
		!['main', 'alternative'].includes(import.meta.env.PUBLIC_SANITY_DATASET)
			? import.meta.env.WEBSITE_ENVIRONMENT
			: undefined}
	>
		<Sprite.Provider>
			<SkipLink label={siteSettings.masthead.skiplink} />
			{
				!disableMasthead ? (
					<Masthead
						logoUrl={locale.urlPrefix}
						logoAlt={siteSettings.logo.alt}
						highlight={mastheadHighlight}
					>
						<slot name="back" slot="start" />

						<LocaleSelector
							slot="start"
							alternativeTranslations={alternativeTranslations}
						/>
					</Masthead>
				) : null
			}
			<main id="content">
				<slot />
				{!disableMastfoot ? <MastFoot locale={locale} /> : null}
			</main>

			<script src="/scripts/piwik.js" is:inline defer></script>
			<noscript>
				<iframe
					src="//statistiek.rijksoverheid.nl/containers/c754ca66-1c06-4247-ac2d-3b4efb60dcac/noscript.html"
					height="0"
					width="0"
					style={{ border: '0', display: 'none', visibility: 'hidden' }}
				></iframe>
			</noscript>
			<script>
				import debounce from 'src/utilities/helpers/debounce';

				const checkSize = () => {
					const scrollbarWidth =
						window.innerWidth - document.documentElement.clientWidth;
					document.documentElement.style.setProperty(
						'--scrollbar__inline-size',
						`${scrollbarWidth}px`,
					);
				};

				window.addEventListener('resize', debounce(checkSize));

				checkSize();
			</script>

			<script>
				import { trackEvent } from 'src/utilities/tracking/piwik';
				const pageType = document.querySelector('html').dataset.pageType;
				const pagePathName =
					document.querySelector('html').dataset.pagePathName;
				window.addEventListener('load', function () {
					trackEvent('Page', pageType, pagePathName);
				});
			</script>
		</Sprite.Provider>
	</body>
</html>
