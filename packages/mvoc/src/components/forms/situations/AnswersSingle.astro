---
import { ContentBlock } from '@design-system/components/ContentBlock';
import {
	getLocaleFromURL,
	prefixUrlWithlocale,
} from 'src/utilities/locale/translation';
import { moduleName as AnswersSingleModuleName } from './AnswersSingle';
import Submit from './Submit.astro';
import { Control } from '@design-system/elements/Control';
import { Stack } from '@design-system/components/Layout/Stack';
import { AssistanceProps } from 'src/utilities/api/queries/translated/assistance';
import { getDaysToGenerate } from 'src/utilities/helpers/advice-helpers';
import { QuestionPageProps } from 'src/utilities/api';
import { getFullPageUrl } from 'src/utilities/helpers/page-subfolder';

export interface Props {
	answers: QuestionPageProps['question']['single'];
	buttons: QuestionPageProps['buttons'];
	assistance?: AssistanceProps;
	label?: string;
}

const { answers, buttons, assistance, label } = Astro.props;
const locale = getLocaleFromURL(Astro.url.pathname);

const parsedButtons = buttons?.map((button, index) =>
	index === 0 && button.standard
		? {
				...button,
				disabled: true,
		  }
		: {
				...button,
		  },
);
---

<form method="get" data-module={AnswersSingleModuleName}>
	<Stack>
		<fieldset>
			{label ? <legend class="u-visually-hidden">{label}</legend> : null}
			<Stack gap="small">
				{
					answers.map(({ content, next, _key }) => (
						<Control
							type="radio"
							name={AnswersSingleModuleName}
							id={_key}
							value={`${prefixUrlWithlocale(getFullPageUrl(next), locale)}`}
							variant="tile"
							data-max-days={getDaysToGenerate(next).length}
						>
							<ContentBlock value={content} />
						</Control>
					))
				}
			</Stack>
		</fieldset>
		<Submit buttons={parsedButtons} assistance={assistance} />
	</Stack>
</form>

<script>
	import { initAnswersSingle } from './AnswersSingle';
	initAnswersSingle();
</script>
