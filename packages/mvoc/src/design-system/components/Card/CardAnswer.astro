---
import { Heading } from '@design-system/elements/Heading';
import { Button } from '@design-system/elements/Button';
import { Stack } from '@design-system/components/Layout/Stack';
import { ButtonsProps, ImageProps } from 'src/utilities/api/queries';
import {
	Locale,
	getLocaleFromURL,
	prefixUrlWithlocale,
} from 'src/utilities/locale/translation';
import { getFullPageUrl } from 'src/utilities/helpers/page-subfolder';
import { MediaBlock } from '@design-system/components/MediaBlock';
import Card from '../Card/Card.astro';

interface Props {
	title: string;
	chapeau?: string;
	buttons?: ButtonsProps;
	image?: ImageProps;
}

const { title, image, buttons } = Astro.props;
const locale = getLocaleFromURL(Astro.url.pathname) as Locale;
---

<Card
	variant={'canvas'}
	class={`c-answers-card${
		buttons?.length ? ' c-answers-card--has-buttons' : ''
	}`}
>
	<MediaBlock icon={image} class="c-advice-card__media-heading">
		<Heading level={3} styledAs={2}>
			{title}
		</Heading>
	</MediaBlock>

	<slot />

	{
		!!buttons?.length ? (
			<ul class="c-answers-card__wrap-buttons" role="list">
				{buttons.map((button) => (
					<li>
						<Button
							variant={button.variant}
							href={prefixUrlWithlocale(
								getFullPageUrl(button.slugCollection),
								locale,
							)}
							icon={button.icon}
						>
							{button.label}
						</Button>
					</li>
				))}
			</ul>
		) : null
	}
</Card>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';

	/**
	 * 1. Calculates the block-size of a single button for later use in our negative margins
	 */
	.c-answers-card {
		--card-button-size: calc(
			var(--space-r-small) * 2 + var(--font-lineheight-root) * 1rem
		); /* [1] */
		display: flex;
		flex-direction: column;
		gap: var(--stack-small);
	}

	.c-advice-card__media-heading.c-advice-card__media-heading {
		--c-media-block-icon-alignment: flex-start;
		--c-media-block-gap: var(--stack-milli);
	}

	.c-answers-card__wrap-buttons {
		display: flex;
		flex-direction: column;
		gap: var(--space-r-small);
		margin-block-start: auto;
		margin-block-end: calc(
			(var(--card-button-size) / 2 + var(--card-padding)) * -1
		);
	}

	// variants
	.c-answers-card--has-buttons {
		@media --mq-large-until {
			margin-block-end: calc(var(--card-button-size) / 2);
		}
	}
</style>
