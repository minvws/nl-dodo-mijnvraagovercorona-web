---
import { HTMLAttributes } from 'astro/types';
import { SiteSettingsProps, useSiteSettings } from 'src/utilities/api/queries';
import { getLocaleFromURL } from 'src/utilities/locale/translation';
import { Link } from '@design-system/elements/Link';
import { parseLink } from 'src/utilities/helpers/link';
import { getFullPageUrl } from 'src/utilities/helpers/page-subfolder';

interface Props extends HTMLAttributes<'div'> {}

const { class: className, ...attrs } = Astro.props;
const locale = getLocaleFromURL(Astro.url.pathname);
const { masthead, feedback }: SiteSettingsProps = await useSiteSettings({
	locale,
});

const currentPathname = Astro.url.pathname;

const isHome =
	currentPathname === locale.urlPrefix ||
	currentPathname === `${locale.urlPrefix}/` ||
	`${currentPathname}/` === `${locale.urlPrefix}/` ||
	currentPathname === '/';

const feedbackMobile = feedback.feedbackMobile;

const urlIsNajaarsRonde = (url: string) => {
	const currentPageInVaccinating =
		url.includes('vaccineren') || url.includes('vaccinating');

	const currentPageInNajaarsRonde =
		currentPageInVaccinating &&
		(url.includes('najaarsronde-coronaprik') ||
			url.includes('can-i-get-a-vaccination'));
	return currentPageInNajaarsRonde;
};
---

<div
	class={`c-nav-main${className ? ` | ${className}` : ''}`}
	data-module="nav-main"
	{...attrs}
>
	<div class="c-nav-main__drawer" data-module-bind="nav-main__drawer">
		<nav class="c-nav-main__nav" aria-label={masthead.menu.landmarkLabel}>
			<ul class="c-nav-main__list" role="list">
				<li>
					<Link
						href={locale.urlPrefix}
						aria-current={isHome ? 'page' : undefined}
						icon="home"
						iconPosition="leading"
					>
						{masthead.menu.homeLabel}
					</Link>
				</li>

				{
					masthead.menu.internalPageCollection.map((page) => {
						const url = parseLink(getFullPageUrl(page.link), locale);
						const currentPageInNajaarsRonde =
							urlIsNajaarsRonde(currentPathname);

						return (
							<li>
								<Link
									href={url}
									aria-current={
										(url.endsWith('/vaccineren') ||
											url.endsWith('/vaccinating')) &&
										currentPageInNajaarsRonde
											? undefined
											: currentPathname.startsWith(url)
											? 'page'
											: undefined
									}
									icon={page.icon}
									iconPosition="leading"
								>
									{page.label ? page.label : page.link.label}
								</Link>
							</li>
						);
					})
				}
			</ul>
		</nav>
		{
			feedbackMobile?.title?.length ? (
				<div class="c-nav-main__feedback">
					<span>
						<strong>{feedbackMobile.title}</strong>
					</span>
					<Link
						href={feedbackMobile.url}
						icon={'external'}
						iconPosition={'trailing'}
					>
						{feedbackMobile.label}
					</Link>
				</div>
			) : null
		}
	</div>
</div>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';
	@use '@design-system-styles/tools/_a11y.scss';
	@use '@design-system-styles/tools/_rem.scss';

	.c-nav-main {
		--nav-main--padding-inline: var(--space-4);
		grid-area: drawer;

		:global(a),
		:global(p) {
			display: block;
			padding-block: var(
				--nav-main__link-padding-block,
				var(--space-3)
			); // 10px
			padding-inline: var(
				--nav-main__link-padding-inline,
				var(--nav-main--padding-inline)
			);
		}

		:global(p) {
			display: var(--nav-main__title-display, block);
			font-weight: bold;
		}

		:global(a) {
			display: flex;
			align-items: center;
			gap: var(--space-4);
			--link-text-decoration: none;
			position: relative;
			color: var(--color-white);

			@media --mq-large-until {
				border-radius: var(--radii-nano);
			}

			&[aria-current] {
				color: var(--color-diepblauw);
				background-color: var(--nav-main__link-bg-color, var(--color-white));
			}

			&:focus {
				z-index: 1;
			}
		}

		:global(.e-icon) {
			--icon-size: #{rem.convert(16px)};
		}

		@media --mq-huge {
			background-color: var(--color-white);
			box-shadow: var(--elevation-frost);
		}
	}

	.c-nav-main__drawer {
		@media --mq-huge-until {
			color: var(--color-white);
			display: grid;
			grid-template-rows: 1fr rem.convert(80px);
			gap: var(--space-6);
			height: calc(100vh - 152px);
			block-size: calc(
				var(--body-block-size) - var(--theme__masthead-top-block-size) -
					var(--space-menu-button)
			);
			margin-block-start: var(--space-menu-button);
		}

		@media --mq-huge {
			--retain-size: #{rem.convert(1264px)};
			--retain-padding: var(--space-8);
			max-inline-size: var(--retain-size);
			padding-inline: var(--retain-padding);
			margin-inline: auto;
		}
	}

	.c-nav-main__feedback {
		font-size: 18px;

		.e-link {
			padding-inline: 0;
			text-decoration: underline;
		}

		@media --mq-huge {
			display: none;
		}
	}

	.c-nav-main__list {
		display: flex;
		flex-direction: var(--nav-main__list-layout, column);
		gap: var(--nav-main__list-gap, var(--space-2));
		flex-wrap: wrap;
	}

	@media --mq-huge {
		.c-nav-main {
			--nav-main-position: static;
			--nav-main__list-layout: row;
			--nav-main__list-gap: var(--space-8);
			--nav-main__list-line-height: var(--line-height-beta);
			--nav-main__drawer-position: static;
			--nav-main__drawer-visibility: visible;
			--nav-main__drawer-transform: none;
			--nav-main__nav-margin-block-end: 0;
			--nav-main__link-bg-color: transparent;
			--nav-main__link-padding-inline: 0;
			--nav-main__link-padding-block: var(--space-4);
			--nav-main__title-display: none;
			.c-nav-main__hide-large {
				display: none;
			}

			:global(a) {
				line-height: --nav-main__list-line-height;
				color: var(--color-diepblauw);
				padding-block-end: calc(var(--nav-main__link-padding-block) - 2px);
				border-block-end: 2px solid
					var(--nav-main__link-border-color, transparent);
				&:hover,
				&:focus {
					--link-color: currentColor;
					--nav-main__link-border-color: var(--color-accent-robijnrood);
				}

				&[aria-current] {
					--nav-main__link-border-color: currentColor;
					--link-color: var(--color-diepblauw);
				}
			}
		}
	}
</style>
