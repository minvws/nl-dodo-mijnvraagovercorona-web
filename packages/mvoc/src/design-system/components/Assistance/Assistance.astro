---
import { Button } from '@design-system/elements/Button';
import { Heading } from '@design-system/elements/Heading';
import { Link } from '@design-system/elements/Link';
import { HTMLAttributes } from 'astro/types';
import { SiteSettingsProps, useSiteSettings } from 'src/utilities/api/queries';
import { AssistanceProps } from 'src/utilities/api/queries/assistance';
import { getLocaleFromURL } from 'src/utilities/locale/translation';
import { getFeedbackUrl } from 'src/utilities/tracking/feedback';
import GridFluid from '../Layout/Grid/GridFluid.astro';
import { Stack } from '../Layout/Stack';
import { getFullPageUrl } from 'src/utilities/helpers/page-subfolder';
import { parseLink } from 'src/utilities/helpers/link';

interface Props extends HTMLAttributes<'div'>, AssistanceProps {
	feedback?: boolean;
	inDialog?: boolean;
}

const {
	class: className,
	feedback,
	inDialog,
	headline,
	image,
	open,
	subTitle,
	chat,
	phone,
	situation,
	getHelp,
} = Astro.props;

const locale = getLocaleFromURL(Astro.url.pathname);
const siteSettings: SiteSettingsProps = await useSiteSettings({ locale });
---

<div
	class={`c-assistance${feedback || getHelp ? ' c-assistance--feedback' : ''}${
		className ? ` | ${className}` : ''
	}`}
	data-module="assistance"
	data-has-chat={chat.title ? true : false}
>
	<GridFluid class="c-assistance__grid">
		<div>
			{
				!inDialog ? (
					<div class="c-assistance__img-container">
						<img
							src={image?.src || '/images/questions.svg'}
							alt=""
							loading="lazy"
							class={`c-assistance__img c-assistance__img-contact`}
						/>
					</div>
				) : null
			}
			<Stack>
				<hgroup>
					{!inDialog ? <Heading styledAs={1}>{headline}</Heading> : null}

					{
						inDialog ? (
							<p>
								<span class="c-assistance__show-chat-open">
									{subTitle.chatOpen}
								</span>
								<span class="c-assistance__show-chat-closed">
									{subTitle.chatClosed}
								</span>
							</p>
						) : (
							<Heading class="c-assistance__heading-humble" level={3}>
								<span class="c-assistance__show-chat-open">
									{subTitle.chatOpen}
								</span>
								<span class="c-assistance__show-chat-closed">
									{subTitle.chatClosed}
								</span>
							</Heading>
						)
					}
				</hgroup>

				<div>
					<Link
						href={`tel:${phone.number.replace(/\D/g, '')}`}
						icon="phone"
						iconPosition="leading"
						variant="cta"
					>
						{phone.number}
					</Link>

					{
						phone.openingHours && (
							<p>
								{phone.openingHours}
								<br />
								<span class="c-assistance__show-phone-open | u-color--accent-safarigroen">
									{open}
								</span>
							</p>
						)
					}
				</div>

				{
					chat.title ? (
						<div>
							<Link
								href="https://chat.vragenovercorona.nl/"
								icon="chat"
								iconPosition="leading"
								variant="cta"
							>
								{chat.title}
							</Link>

							<p>
								{chat.openingHours}
								<br />
								<span class="c-assistance__show-chat-open | u-color--accent-safarigroen">
									{open}
								</span>
							</p>
						</div>
					) : null
				}
			</Stack>
		</div>

		{
			feedback && (locale.id === 'nl' || locale.id === 'en') ? (
				<div>
					<div class="c-assistance__img-feedback-container">
						<img
							src={image?.src || '/images/questions.svg'}
							alt=""
							loading="lazy"
							class={`c-assistance__img c-assistance__img-feedback`}
						/>
					</div>
					<Stack>
						<Heading class="c-assistance__heading-humble" level={3}>
							{situation.question}
						</Heading>
						<Button
							href={getFeedbackUrl(siteSettings.feedback.url, {
								source: 'home',
								advice: 'home',
							})}
						>
							{situation.button}
						</Button>
					</Stack>
				</div>
			) : getHelp ? (
				<div>
					<div class="c-assistance__img-feedback-container">
						<img
							src={image?.src || '/images/questions.svg'}
							alt=""
							loading="lazy"
							class={`c-assistance__img c-assistance__img-feedback`}
						/>
					</div>
					<Stack>
						<Heading class="c-assistance__heading-humble" level={3}>
							{getHelp.title}
						</Heading>
						<Button
							href={parseLink(
								getFullPageUrl(getHelp.button.slugCollection),
								locale,
							)}
							icon={getHelp.button.icon}
							interactionIconAnimation={'swing'}
						>
							{getHelp.button.label}
						</Button>
					</Stack>
				</div>
			) : null
		}
	</GridFluid>
</div>

<script>
	const getIsPhonenumberOpen = () => {
		const now = new Date();
		const hours = now.getHours();
		const day = now.getDay();

		const isValidHours = hours >= 8 && hours < 18;
		const isValidDay = day > 0 && day < 6;

		return isValidHours && isValidDay;
	};

	const parent = document.querySelector('[data-module="assistance"]');

	if (parent) {
		const hasChat = parent.hasAttribute('data-has-chat');

		if (hasChat) {
			fetch(
				'https://server.vragenovercorona.nl/client/areaStatus/BXVIVGePHOZtcUQMz2vm.json',
			)
				.then((response) => response.json())
				.then((data) =>
					parent.classList.toggle('chat-open', data.isOpenToClients),
				);
		}

		parent.classList.toggle('phone-open', getIsPhonenumberOpen());
	}
</script>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';
	@use '@design-system-styles/tools/_rem.scss';

	:global(:where(html)) {
		--assistance__image-size: #{rem.convert(150px)};
		--assistance__image-pull-up-division: 2;
	}

	.c-assistance {
		--_assistance__image-pull-up: calc(
			(
					var(--layer-padding-block-start) + var(--assistance__image-size) /
						var(--assistance__image-pull-up-division)
				) * -1
		);
	}

	.c-assistance__grid {
		--grid-fluid-min-item-size: var(--space-100);
		--grid-fluid-gap: var(--space-14);
	}

	@media --mq-large {
		.c-assistance--feedback {
			.c-assistance__img-container {
				display: none;
			}

			.c-assistance__img-feedback {
				margin: auto;
				inline-size: #{rem.convert(90px)};
			}
		}
	}

	.c-assistance__img-container,
	.c-assistance--feedback .c-assistance__img-feedback-container {
		display: flex;
		inline-size: var(--assistance__image-size);
		aspect-ratio: 1/1;
		border: 1px solid var(--color-poolblauw);
		border-radius: 50%;
		background-color: white;
		margin-block-start: var(--_assistance__image-pull-up);
		margin-block-end: var(--space-6);

		@media --mq-large-until {
			margin-inline: auto;
		}
	}

	@media --mq-large-until {
		.c-assistance--feedback .c-assistance__img-feedback-container {
			display: none;
		}
	}

	.c-assistance__heading-humble {
		font-weight: normal;
	}

	.c-assistance__img-contact {
		display: block;
		margin: auto;
		inline-size: #{rem.convert(90px)};
	}

	.c-assistance__show-chat-open {
		display: none;
		.chat-open & {
			display: initial;
		}
	}

	.c-assistance__show-chat-closed {
		display: initial;
		.chat-open & {
			display: none;
		}
	}

	.c-assistance__show-phone-open {
		display: none;
		.phone-open & {
			display: initial;
		}
	}

	.c-assistance__show-phone-open:before {
		content: '';
		display: inline-block;
		inline-size: var(--space-3);
		block-size: var(--space-3);
		margin-inline-end: var(--space-1);
		border-radius: 50%;
		background-color: var(--color-accent-safarigroen);
	}
</style>
