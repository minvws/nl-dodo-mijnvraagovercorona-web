---
import Icon, {
	Props as IconProps,
} from '@design-system/elements/icon/Icon.astro';
interface Shared {
	disabled?: boolean;
	variant?: 'primary' | 'secondary' | 'tertiary';
	icon?: IconProps['name'];
	iconPosition?: 'leading' | 'trailing';
}

interface Button extends Shared {
	type: 'button' | 'reset' | 'submit';
	formaction?: string;
}

interface Link extends Shared {
	href: string;
	external?: boolean;
	lang?: string;
}

type Props = Button | Link;

const {
	href,
	type,
	disabled,
	formaction,
	variant,
	external,
	lang,
	icon,
	iconPosition,
} = Astro.props;

const Element = href || href === '' ? 'a' : 'button';
---

<style lang="scss">
	.e-button {
		--button-background-color: var(--color-accent-robijnrood);
		--button-color: var(--color-white);
		--button-border-width: 1px;
		--button-border-color: var(--button-background-color);
		display: inline-flex;
		align-items: center;
		justify-content: space-between;
		gap: var(--space-r-small);
		padding: calc(var(--space-r-small) - var(--button-border-width));
		border: var(--button-border-width) solid var(--button-border-color);
		border-radius: var(--radii-small);
		text-align: center;
		text-decoration: none;
		background-color: var(--button-background-color);
		color: var(--button-color);
		transition-property: background-color, color, border, box-shadow;
		transition-duration: 300ms;
		transition-timing-function: ease-in-out;
		cursor: pointer;

		&:hover,
		&:focus {
			--button-background-color: var(--color-accent-violet);
		}

		&:focus {
			outline: 2px solid var(--color-donkerblauw);
			outline-offset: 2px;
		}

		// variants
		&.e-button--secondary {
			--button-background-color: var(--color-donkerblauw);

			&:hover,
			&:focus {
				--button-background-color: var(--color-diepblauw);
			}
		}

		&.e-button--tertiary {
			--button-background-color: var(--color-white);
			--button-color: var(--color-donkerblauw);
			--button-border-color: var(--color-poolblauw);
			box-shadow: var(--elevation-tile) var(--button-border-color);
			outline: none;

			&:hover,
			&:focus {
				--button-background-color: var(--color-white);
				--button-border-color: var(--button-color);
			}
		}

		&:disabled,
		&.is-disabled {
			--button-background-color: var(--color-grijs-4);
			cursor: not-allowed;
		}
	}
</style>

<Element
	class={`e-button${variant ? `  e-button--${variant}` : ''}${
		href && disabled ? `  is-disabled` : ''
	}`}
	type={!href && type ? type : undefined}
	disabled={!href && disabled ? disabled : undefined}
	formaction={!href && formaction ? formaction : undefined}
	href={href}
	target={href && external ? '_blank' : undefined}
	rel={href && external ? 'noopener noreferrer' : undefined}
	lang={href ? lang : undefined}
	hreflang={href ? lang : undefined}
>
	{
		iconPosition === 'leading' ? (
			href && external ? (
				<Icon name="external" />
			) : icon ? (
				<Icon name={icon} />
			) : null
		) : null
	}
	<slot />
	{
		iconPosition !== 'leading' ? (
			href && external ? (
				<Icon name="external" />
			) : icon ? (
				<Icon name={icon} />
			) : null
		) : null
	}
</Element>
