---
import { type Colors } from '@mvoc/ui/utilities';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'div' | 'section' | 'footer'> {
	as?: 'div' | 'section' | 'footer';
	pullUpBy?: 'layer' | 'hero';
	pushDownBy?: 'assistance-image' | 'layer';
	background?: 'zebra' | Colors;
}

const {
	as = 'section',
	pullUpBy,
	pushDownBy,
	background,
	id,
	class: className,
	...attrs
} = Astro.props;

const Component = as;
---

<Component
	id={id}
	class={`c-layer${pullUpBy ? ` c-layer--pull-up-by-${pullUpBy}` : ''}${
		pushDownBy ? ` c-layer--push-down-by-${pushDownBy}` : ''
	}${
		background
			? background === 'zebra'
				? ' c-layer--zebra'
				: ` | u-background--${background}`
			: ''
	}${className ? ` | ${className}` : ''}`}
	{...attrs}
>
	<slot />
</Component>

<style lang="scss">
	@use '@mvoc/ui/styles/primitives/responsive';
	.c-layer {
		--layer-padding: var(--density-layer);
		--layer-padding-block-start: var(--layer-padding);
		--layer-padding-block-end: var(--layer-padding);
		padding-block-start: var(--layer-padding-block-start);
		padding-block-end: var(--layer-padding-block-end);
	}

	[class*='c-layer--pull-up-by'] {
		--layer-pull-up: 0px;
		padding-block-start: calc(
			var(--layer-padding-block-start) + var(--layer-pull-up)
		);
		margin-block-start: calc(var(--layer-pull-up) * -1);
	}

	.c-layer--pull-up-by-layer {
		--layer-pull-up: var(--layer-padding);
	}

	.c-layer--pull-up-by-hero {
		--layer-pull-up: var(--density-hero);
	}

	[class*='c-layer--push-down-by'] {
		--layer-push-down: 0px;
		margin-block-start: var(--layer-push-down);
	}

	.c-layer--push-down-by-layer {
		--layer-push-down: var(--layer-padding-block-start);
	}

	.c-layer--push-down-by-assistance-image {
		--layer-push-down: calc(
			var(--assistance__image-size) / var(--assistance__image-pull-up-division)
		);
	}

	.c-layer--zebra {
		background-color: var(--color-white);
		--external-alternative-background: var(--color-ijsblauw);
		&:nth-of-type(odd) {
			background-color: var(--color-ijsblauw);
			--external-alternative-background: var(--color-white);
		}
	}
</style>
