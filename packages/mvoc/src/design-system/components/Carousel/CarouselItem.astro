---
// @ts-nocheck
import type { HTMLAttributes } from 'astro/types';
import { CarouselItemProps } from 'src/utilities/api/queries';
import { parseLink } from 'src/utilities/helpers/link';
import { getFullPageUrl } from 'src/utilities/helpers/page-subfolder';
import { getLocaleFromURL } from 'src/utilities/locale/translation';
import { MultiContentBlock } from '../ContentBlock';
import { Modal } from '../Modal';

interface Button extends HTMLAttributes<'button'>, CarouselItemProps {}
interface Link extends HTMLAttributes<'a'>, CarouselItemProps {}
type Props = Button | Link;

const {
	class: className,
	id,
	headline,
	openItem,
	image,
	slugCollection,
	multiContentBlocks,
	...attrs
} = Astro.props;
const locale = getLocaleFromURL(Astro.url.pathname);

const href = slugCollection?.slug
	? parseLink(getFullPageUrl(slugCollection), locale)
	: slugCollection?.asset
	? slugCollection.asset
	: null;

const Element = href ? 'a' : 'button';
---

<>
	<Element
		type={Element === 'button' ? 'button' : undefined}
		class={`c-carousel-item${className ? ` | ${className}` : ''}`}
		href={href ? href : undefined}
		id={!href ? `info-modal-${id}` : undefined}
		{...attrs}
	>
		<img src={image.src} alt="" loading="lazy" />
		<div class="c-carousel-item__body">
			<span class="c-carousel-item__headline">
				{headline}
			</span>
			{openItem ? <span role="presentation">{openItem}</span> : null}
		</div>
	</Element>
	{
		!href ? (
			<Modal title={headline} id={`info-modal-${id}`}>
				{multiContentBlocks ? (
					<MultiContentBlock multiContentBlocks={multiContentBlocks} />
				) : null}
			</Modal>
		) : null
	}
</>

<style lang="scss">
	@use '@mvoc/ui/styles/primitives/responsive';
	@use '@mvoc/ui/styles/tools/rem';
	@use '@mvoc/ui/styles/tools/a11y';

	/**
	 * 1. Height of a slide is always 100% of the viewport minus the spacing
	 *    between top track and indicators. With a max of 520px height
	 */
	.c-carousel-item {
		position: relative;
		display: block;
		block-size: calc(
			var(--body-block-size) -
				(
					var(--carousel-component-spacing) * 3 +
						var(--carousel__indicator-size) +
						var(--carousel__track-focus-outline-correction)
				)
		); /* [1] */
		max-block-size: #{rem.convert(520px)}; /* [1] */
		border-radius: var(--radii-large);
		overflow: hidden;
		cursor: pointer;

		&::before {
			position: absolute;
			inset-block-start: 0;
			inset-inline-start: 0;
			inline-size: 100%;
			block-size: 100%;
			background: linear-gradient(
				rgba(0, 0, 0, 0) 32.29%,
				rgba(0, 0, 0, 0.55) 59.9%
			);
			content: '';
			pointer-events: none;
		}

		img {
			block-size: 100%;
			inline-size: 100%;
			object-fit: cover;
		}

		&:focus {
			@include a11y.focusring;
		}

		&.is-visible {
		}
	}

	.c-carousel-item__body {
		position: absolute;
		inset-block-end: 0;
		display: flex;
		flex-direction: column;
		gap: var(--space-3);
		padding-block: var(--carousel__block-padding);
		padding-inline: var(--carousel__inline-padding);
		text-align: start;
		font-weight: bold;
		color: var(--carousel__card-color);

		.c-carousel-item__headline {
			font-size: var(--font-size-beta);
			line-height: var(--line-height-delta);
			text-decoration: none;
		}

		span {
			font-size: var(--font-size-gamma);
			text-decoration: underline;
		}
	}
</style>
