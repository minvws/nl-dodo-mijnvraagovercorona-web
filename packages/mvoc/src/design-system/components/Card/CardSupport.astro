---
import { Heading } from '@mvoc/ui/elements';
import {
	type ButtonsProps,
	type PictureProps,
} from 'src/utilities/api/queries';
import Card from './Card.astro';
import { FlexibleButton } from '@modules/elements/FlexibleButton';

interface Props {
	title: string;
	chapeau?: string;
	buttons?: ButtonsProps;
	image?: PictureProps['image'];
}

const { title, image, buttons } = Astro.props;
---

<Card variant={'image'} class={`c-support-card`}>
	<div class="c-support-card__wrap-image">
		{image && image.src ? <img src={image.src} alt="" loading="lazy" /> : null}
	</div>
	<div class="c-support-card__wrap-content">
		<Heading class="c-support-card__heading" level={3} styledAs={4}>
			{title}
		</Heading>
		<slot />
	</div>

	{
		!!buttons?.length ? (
			<ul class="c-support-card__wrap-buttons" role="list">
				{buttons.map((button) => (
					<li>
						<FlexibleButton {...button} />
					</li>
				))}
			</ul>
		) : null
	}
</Card>

<style lang="scss">
	@use '@mvoc/ui/styles/primitives/responsive';
	@use '@mvoc/ui/styles/tools/rem';

	.c-support-card {
		--card-padding: 0;
		display: flex;
		flex-direction: column;
		gap: var(--space-4);
		padding-block-end: var(--space-6);
	}

	.c-support-card__wrap-image {
		display: flex;
		background-color: var(--color-poolblauw);
		height: #{rem.convert(182px)};
		img {
			block-size: 5rem;
			margin: auto;
		}
	}

	.c-support-card__wrap-content {
		display: flex;
		flex-direction: column;
		padding-inline: var(--space-6);
		gap: var(--space-4);
	}

	.c-support-card__wrap-buttons {
		margin-block-start: auto;
		padding-inline: var(--space-6);
	}
</style>
