#
# GitLab build pipeline
#

variables:
  CD_APP_NAME: travel-during-corona-website
  CD_NAMESPACE_BHR: vws-reis-bhr
  CD_HARBOR_REGISTRY: harbor.diensten.test.overheid.standaardplatform.rijksapps.nl

image: harbor.diensten.test.overheid.standaardplatform.rijksapps.nl/vws-reis/tool-box:1.2

.build-image: &build-image
  environment:
    name: 'test-cluster'
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.3.0-debug
    entrypoint: ['']
  script:
    - echo "${DOCKER_AUTH_CONFIG}" > /kaniko/.docker/config.json
    - cat /kaniko/.docker/config.json
    - cat ./Dockerfile |
      sed "s~node:14-alpine~harbor.diensten.test.overheid.standaardplatform.rijksapps.nl/vws-reis/node:14-alpine~g"
      > Dockerfile_derived # Adjust FROM to prevent Docker rate limiting; assuming adjusted image to be present in Harbor; ref. sp-demo/housekeeping
    - cat Dockerfile_derived
    - echo "CI_PROJECT_DIR ${CI_PROJECT_DIR}"
    - pwd
    - 'echo ${CD_HARBOR_REGISTRY}/vws-reis/${CD_APP_NAME}:${CD_APP_TAG}'
    # Build and push to Harbor
    - /kaniko/executor
      --context ${CI_PROJECT_DIR}
      --dockerfile ./Dockerfile_derived
      --destination ${CD_HARBOR_REGISTRY}/vws-reis/${CD_APP_NAME}:${CD_APP_TAG}
      --destination ${CD_HARBOR_REGISTRY}/vws-reis/${CD_APP_NAME}:${CD_TAG}
      # --cache=true

stages:
  - test
  - build
  - label
  - deploy

# CI_* variables are defined in GitLab group settings, see build log for actual values
before_script:
  - echo "Started by ${GITLAB_USER_LOGIN} at $(date +%Y-%m-%d'-'%H-%M-%S)"
  - export CD_APP_TAG=$(echo ${CI_COMMIT_TAG} | cut -d'-' -f 2)
  - echo ${CD_APP_TAG}
  - unset ${HISTFILE} # Disable shell cache for security purposes

after_script:
  - echo "Ended by ${GITLAB_USER_LOGIN} at $(date +%Y-%m-%d'-'%H-%M-%S)"

test:
  image: harbor.diensten.test.overheid.standaardplatform.rijksapps.nl/vws-reis/node:14-alpine
  stage: test
  script:
    - yarn
    - yarn test

build image latest:
  <<: *build-image
  variables:
    CD_TAG: latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^development/'
      when: always
    - when: never

build image staging:
  <<: *build-image
  variables:
    CD_TAG: staging
  rules:
    - if: '$CI_COMMIT_TAG =~ /^staging/'
      when: always
    - when: never

label image production:
  stage: label
  environment:
    name: test-cluster
  rules:
    - if: '$CI_COMMIT_TAG =~ /^production/'
      when: always
    - when: never
  script:
    - CD_USERNAME=$(kubectl get secret -n ${CD_NAMESPACE_BHR} sa-user-secret -o jsonpath={.data.username} | base64 --decode)
    - CD_PASSWORD=$(kubectl get secret -n ${CD_NAMESPACE_BHR} sa-user-secret -o jsonpath={.data.password} | base64 --decode)
    - "CONTENT_HEADER='Content-Type:application/json'"
    - curl -v -u "${CD_USERNAME}:${CD_PASSWORD}" -H ${CONTENT_HEADER} https://${CD_HARBOR_REGISTRY}/api/repositories/vws-reis/${CD_APP_NAME}/tags/${CD_APP_TAG}/labels -d '{"id":1}'

deploy image latest:
  variables:
    CD_WEBSITE_COMMIT_TAG: $CI_COMMIT_TAG
    CD_ENVIRONMENT: development
  stage: deploy
  trigger: vws/reis/nl-covid19-travel-during-corona-deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^development/'
      when: on_success
    - when: never

deploy image staging:
  variables:
    CD_WEBSITE_COMMIT_TAG: $CI_COMMIT_TAG
    CD_ENVIRONMENT: staging
  stage: deploy
  trigger: vws/reis/nl-covid19-travel-during-corona-deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^staging/'
      when: on_success
    - when: never

deploy image production:
  variables:
    CD_WEBSITE_COMMIT_TAG: $CI_COMMIT_TAG
    CD_ENVIRONMENT: production
  stage: deploy
  trigger: vws/reis/nl-covid19-travel-during-corona-deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^production/'
      when: manual
    - when: never

