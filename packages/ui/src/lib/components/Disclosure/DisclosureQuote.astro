---
import { type HTMLAttributes } from 'astro/types';
import { Stack, Picture, type PictureProps } from '@mvoc/ui/components';
import type { DisclosureProps } from '.';
import { Heading, Link } from '@mvoc/ui/elements';

interface Props extends DisclosureProps, Omit<HTMLAttributes<'div'>, 'id'> {
	picture: PictureProps;
	quote?: string;
	readMore?: string;
	readLess?: string;
}

const {
	label,
	id,
	headingLevel,
	headingStyledAs,
	picture,
	quote,
	readMore,
	readLess,
	class: className,
	...attrs
} = Astro.props;
---

<c-disclosure
	class={`c-disclosure-quote${className ? ` | ${className}` : ''}`}
	{...attrs}
>
	<Stack>
		<Heading
			level={headingLevel}
			styledAs={headingStyledAs}
			class="c-disclosure-quote__heading"
			itemprop="name"
			id={id}
		>
			{label}
		</Heading>
		{
			quote && picture ? (
				<div class="c-disclosure-quote__wrap">
					{quote && <p class="c-disclosure-quote__quote">{quote}</p>}
					{picture ? (
						<Picture class="c-disclosure-quote__picture" {...picture} />
					) : null}
				</div>
			) : null
		}

		<Link
			id={`header-${id}`}
			class="c-disclosure-quote__toggle--button"
			aria-expanded="false"
			aria-controls={`panel-${id}`}
			data-module-bind="disclosure__toggle"
			icon="chevron-small-down"
			iconPosition="trailing"
			data-pagefind-ignore="all"
		>
			<span class={readMore ? 'c-disclosure-quote__show-inactive' : undefined}>
				{readMore}
			</span>
			<span class={readLess ? 'c-disclosure-quote__show-active' : undefined}>
				{readLess}
			</span>
		</Link>
	</Stack>

	<div
		id={`panel-${id}`}
		role="region"
		class="c-disclosure-quote__panel"
		data-module-bind="disclosure__panel"
		aria-labelledby={`header-${id}`}
		itemscope
		itemprop="acceptedAnswer"
		itemtype="https://schema.org/Answer"
	>
		<div
			class="c-disclosure-quote__panel-inner"
			data-module-bind="disclosure__panel-inner"
			itemprop="text"
		>
			<slot />
		</div>
	</div>
</c-disclosure>

<script>
	import './disclosure';
</script>

<style lang="scss">
	@use '@mvoc/ui/styles/tools/a11y';
	@use '@mvoc/ui/styles/primitives/responsive';
	@use '@mvoc/ui/styles/tools/rem';

	.c-disclosure-quote {
		display: block;
		padding: #{rem.convert(24px)};
		background: var(--color-ijsblauw);
		border-radius: var(--radii-nano);
		overflow: hidden;
	}

	.c-disclosure-quote__panel {
		--_disclosure__panel-padding: var(
			--disclosure__panel-padding,
			var(--space-6)
		);
		--disclosure__panel--spacing: calc(
			var(--_disclosure__panel-padding) - var(--card-border-width)
		);
		block-size: 0;
		padding-inline: var(--disclosure__panel--spacing);
		overflow: hidden;
		opacity: 0;
		visibility: hidden;
		transition: all 0.3s ease-in-out;
	}

	.c-disclosure-quote__panel-inner {
		padding-block-start: var(--space-4);
		padding-block-end: var(--_disclosure__panel-padding);
	}

	.c-disclosure-quote__show-active {
		display: none;
	}

	.c-disclosure-quote.is-active {
		.c-disclosure-quote__panel {
			opacity: 1;
			visibility: visible;
		}
		.c-disclosure-quote__show-inactive {
			display: none;
		}
		.c-disclosure-quote__show-active {
			display: block;
		}
	}

	.c-disclosure-quote__toggle--button {
		display: flex;
		align-items: center;
		gap: var(--space-2);
		--button-color: var(--color-diepblauw);
		&:hover {
			--button-background-color: var(--color-poolblauw);
		}

		&:active {
			--button-border-color: var(--color-poolblauw);
		}

		:global(.e-icon) {
			transition: transform 0.3s;
			color: var(--color-accent-robijnrood);
		}

		:global(.e-link__label) {
			color: var(--color-accent-robijnrood);
		}

		&[aria-expanded='true'] {
			--button-background-color: var(--color-poolblauw);
			:global(.e-icon) {
				transform: rotate(180deg);
			}
		}
	}

	.c-disclosure-quote__wrap {
		display: grid;
		grid-template-columns: 3fr 1fr;
		position: relative;
		gap: var(--space-4);
	}

	.c-disclosure-quote__quote {
		font-style: italic;
		color: var(--color-diepblauw);
	}

	.c-disclosure-quote__picture {
		position: absolute;
		right: 0;
		top: -25px;
		width: #{rem.convert(120px)};

		@media (--mq-large-until) {
			position: relative;
			right: -50px;
			top: -30px;
		}
	}
</style>
