---
import { Heading } from '@dodo/ui/elements';
import type { ButtonsProps, PictureProps } from 'src/utilities/api/queries';
import { Card, Media } from '@dodo/ui/components';
import { FlexibleButton } from '@components/elements/FlexibleButton';

interface Props {
	title: string;
	chapeau?: string;
	buttons?: ButtonsProps;
	image?: PictureProps['image'];
}

const { title, image, buttons } = Astro.props;
---

<Card
	variant={'canvas'}
	class={`c-answers-card${
		!!buttons?.length ? ' c-answers-card--with-buttons' : ''
	}`}
>
	<Media image={image} class="c-advice-card__media">
		<Heading class="c-advice-card__heading" level={3} styledAs={4}>
			{title}
		</Heading>
	</Media>

	<slot />

	{
		!!buttons?.length ? (
			<ul class="c-answers-card__wrap-buttons" role="list">
				{buttons.map((button) => (
					<li>
						<FlexibleButton {...button} />
					</li>
				))}
			</ul>
		) : null
	}
</Card>

<style lang="scss">
	@use '@dodo/ui/styles/primitives/responsive';

	/**
	 * 1. Calculates the block-size of a single button for later use in our negative margins
	 */
	.c-answers-card {
		--card-button-size: calc(
			var(--space-4) * 2 + var(--font-lineheight-root) * 1rem
		); /* [1] */
		display: flex;
		flex-direction: column;
		gap: var(--space-4);
	}

	/**
	 * 1. Align first line of heading with the icon
	 */
	.c-advice-card__media.c-advice-card__media {
		--c-media-image-alignment: flex-start;
		--c-media-gap: var(--space-2);

		&.c-media--has-image {
			.c-advice-card__heading {
				margin-block-start: 0.25em; /* [1] */
			}
		}
	}

	.c-answers-card__wrap-buttons {
		display: flex;
		flex-direction: column;
		gap: var(--space-4);
		margin-block-start: auto;
		margin-block-end: calc(
			(var(--card-button-size) / 2 + var(--card-padding)) * -1
		);
	}

	// Variants
	@media (--mq-large-until) {
		.c-answers-card--with-buttons {
			margin-block-end: calc(var(--card-button-size) / 2);
		}
	}
</style>
