---
import { Heading } from '@design-system/elements/Heading';
import { Icon } from '@design-system/elements/Icon';
import { Link } from '@design-system/elements/Link';
import ContentBlock from '@modules/ContentBlock/ContentBlock.astro';
import { SiteSettingsProps, useSiteSettings } from 'src/utilities/api/queries';
import { Locale, prefixUrlWithlocale } from 'src/utilities/locale/translation';
import { Stack } from '../Layout/Stack';
import { LinkList } from '../Lists';

interface Props {
	locale: Locale;
}

const { locale } = Astro.props;
const siteSettings: SiteSettingsProps = await useSiteSettings({ locale });
---

<footer class="c-mastfoot" role="contentinfo">
	<div>
		<Heading class="u-visually-hidden">
			{siteSettings.footer.footerMainTitle}
		</Heading>
		<ContentBlock value={siteSettings.footer.footerText} />
	</div>

	<div class="c-mastfoot__column">
		<Stack gap="small">
			<Heading level={3}>{siteSettings.footer.title}</Heading>
			<LinkList
				links={siteSettings.footer.items.map((item) => ({
					label: item.content,
					href: prefixUrlWithlocale(item.url, locale),
				}))}
			/>
		</Stack>
	</div>

	<div class="c-mastfoot__column">
		<Stack gap="small">
			<Heading level={3}>{siteSettings.footer.meerInformatieTitle}</Heading>
			<LinkList
				links={[
					{
						label: siteSettings.footer.rijksoverheidText,
						href: siteSettings.footer.rijksoverheidUrl,
						external: true,
					},
				]}
			/>
		</Stack>
	</div>
</footer>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';

	.c-mastfoot {
		display: grid;
		grid-template-columns: 1fr;
		gap: var(--space-r-large);
		background-color: var(--color-donkerblauw);
		color: var(--color-white);

		:global(h2, h3) {
			color: currentColor;
		}

		:global(a) {
			--link-interactive-outline: currentColor;

			&,
			&:hover,
			&:focus {
				--link-color: currentColor;
			}
		}

		@media --mq-large {
			grid-template-columns: 1.25fr 1fr 1fr;
		}
	}

	.c-mastfoot__column {
		:global(a > span) {
			text-decoration: none;
		}
		:global(a:hover > span, a:focus > span) {
			text-decoration: underline;
		}
	}
</style>
