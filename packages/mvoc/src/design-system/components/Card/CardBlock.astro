---
import { Heading } from '@design-system/elements/Heading';
import { Button } from '@design-system/elements/Button';
import { Stack } from '@design-system/components/Layout/Stack';
import { Card } from '.';
import { Chapeau } from '@design-system/elements/Chapeau';
import { ButtonsProps } from 'src/utilities/api/queries/translated';
import {
	Locale,
	getLocaleFromURL,
	prefixUrlWithlocale,
} from 'src/utilities/locale/translation';
import {
	getPageSubfolder,
	getFullPageUrl,
} from 'src/utilities/helpers/page-subfolder';

interface Props {
	title: string;
	chapeau?: string;
	buttons?: ButtonsProps;
}

const { title, chapeau, buttons } = Astro.props;
const locale = getLocaleFromURL(Astro.url.pathname) as Locale;
---

<Card>
	<Stack gap="small">
		<hgroup class="c-card-block__hgroup">
			<Heading level={3} styledAs={2}>{title}</Heading>
			{chapeau && <Chapeau role="presentation">{chapeau}</Chapeau>}
		</hgroup>

		<slot />

		{
			!!buttons?.length ? (
				<ul class="c-card-block__wrap-buttons" role="list">
					{buttons.map((button) => (
						<li>
							<Button
								variant={button.variant}
								href={prefixUrlWithlocale(
									getFullPageUrl(button.slugCollection),
									locale,
								)}
								icon={button.icon}
							>
								{button.label}
							</Button>
						</li>
					))}
				</ul>
			) : null
		}

		<slot name="appendix" />
	</Stack>
</Card>

<style lang="scss">
	.c-card-block__hgroup {
		display: flex;
		flex-direction: column-reverse;
		gap: var(--space-r-milli);
	}

	.c-card-block__wrap-buttons {
		display: flex;
		flex-direction: column;
		gap: var(--space-r-small);
	}
</style>
