---
import { Button } from '@design-system/elements/Button';
import { Control } from '@design-system/elements/Control';
import { Heading } from '@design-system/elements/Heading';
import type { HTMLAttributes } from 'astro/types';
import type { SiteSettingsProps } from 'src/utilities/api/queries';
import { useSiteSettings } from 'src/utilities/api/queries';
import { getLocaleFromURL } from 'src/utilities/locale/translation';
import { Card } from '../Card';
import { Stack } from '../Layout/Stack';

interface Props extends HTMLAttributes<'section'> {
	url: string;
	name: string;
}

const { class: className, url, name, ...attrs } = Astro.props;
const locale = getLocaleFromURL(Astro.url.pathname);
const siteSettings: SiteSettingsProps = await useSiteSettings({ locale });
---

<>
	{
		locale.id === 'nl' || locale.id === 'en' ? (
			<section
				class={`c-feedback${className ? ` | ${className}` : ''}`}
				{...attrs}
				data-module="feedback"
				data-name={name}
				id="feedback"
			>
				<Stack>
					<Heading>{siteSettings.feedback.title}</Heading>
					{siteSettings.feedback.content ? (
						<p>{siteSettings.feedback.content}</p>
					) : null}
					<form
						class="c-feedback__form"
						action=""
						data-module-bind="feedback__form"
					>
						<fieldset>
							<legend class="u-visually-hidden">
								{siteSettings.feedback.title}
							</legend>
							<div class="c-feedback__wrap-controls">
								<Control
									type="radio"
									value="Like"
									name="feedback-choice"
									id="feedback-choice-yes"
									required
								>
									{siteSettings.feedback.labels.like}
								</Control>
								<Control
									type="radio"
									value="Dislike"
									name="feedback-choice"
									id="feedback-choice-no"
								>
									{siteSettings.feedback.labels.dislike}
								</Control>
							</div>
						</fieldset>

						<div role="status">
							<Card
								class="c-feedback__message"
								variant="filled"
								data-module-bind="feedback__message"
							>
								<Stack>
									<p>{siteSettings.feedback.thanks}</p>
									<Button href={url} data-module-bind="feedback__button">
										{siteSettings.feedback.button}
									</Button>
								</Stack>
							</Card>
						</div>
					</form>
				</Stack>
			</section>
		) : null
	}
</>

<style lang="scss">
	.c-feedback {
	}

	.c-feedback__wrap-controls {
		display: flex;
		gap: var(--space-6);
	}

	.c-feedback__message {
		margin-block-start: var(--space-6);
		display: none;

		.c-feedback__form:valid & {
			display: block;
		}
	}
</style>

<script>
	import { trackEvent } from 'src/utilities/tracking/piwik';

	const parent = document.querySelector(
		'[data-module="feedback"]',
	) as HTMLElement;

	if (parent) {
		const form = parent.querySelector(
			'[data-module-bind="feedback__form"]',
		) as HTMLFormElement;
		const buttonElement = parent.querySelector(
			'[data-module-bind="feedback__button"]',
		) as HTMLAnchorElement;

		form.addEventListener('submit', (event) => {
			event.preventDefault;
		});

		form.addEventListener('change', () => {
			const formData = new FormData(form);
			const choice = formData.get('feedback-choice');
			const pagePathName = document.querySelector('html').dataset.pagePathName;
			const pageType = document.querySelector('html').dataset.pageType;
			// update feedback button with feedback url parameter containing our choice
			const urlPart = `&feedback=${choice.toString().toLowerCase()}`;
			const buttonHref = buttonElement.href;
			buttonElement.href = buttonHref.includes('&feedback=')
				? buttonHref
						.replace('&feedback=like', urlPart)
						.replace('&feedback=dislike', urlPart)
				: `${buttonHref}${urlPart}`;

			trackEvent('Button', choice.toString(), `${pageType} - ${pagePathName}`);
		});
	}
</script>
