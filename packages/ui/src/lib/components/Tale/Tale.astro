---
import { type HTMLAttributes } from 'astro/types';
import {
	Retain,
	Stack,
	Switcher,
	Picture,
	type PictureProps,
} from '@mvoc/ui/components';
import { Heading } from '@mvoc/ui/elements';

export interface Props extends HTMLAttributes<'section'> {
	title: string;
	picture?: PictureProps;
	id?: string;
	renderTitle?: boolean;
}

const {
	title,
	picture,
	id,
	renderTitle = true,
	class: className,
	...attrs
} = Astro.props;
---

<section
	class={`c-tale${className ? ` | ${className}` : ''}`}
	id={id}
	{...attrs}
>
	<Switcher class="c-tale__switcher">
		<Retain variant={'text'}>
			<Stack class="c-tale__body">
				{renderTitle ? <Heading>{title}</Heading> : undefined}
				<slot />
			</Stack>
		</Retain>
		{
			picture?.image?.src ? (
				<Picture class="c-tale__picture" {...picture} />
			) : null
		}
	</Switcher>
</section>

<style lang="scss">
	@use '@mvoc/ui/styles/tools/rem';
	@use '@mvoc/ui/styles/tools/list';

	.c-tale {
		&:nth-of-type(even) {
			.c-tale__switcher {
				flex-direction: row-reverse;
			}
		}
	}

	.c-tale__body {
		:global(:where(h1, h2, h3, h4, h5, h6, .e-heading)) {
			--heading-font-size: var(--font-size-delta);
			--heading-line-height: var(--line-height-delta);
		}
	}

	.c-tale__picture {
		:global(img) {
			inline-size: 100%;
			max-inline-size: #{rem.convert(280px)};
			margin-inline: auto;
		}
	}
</style>
