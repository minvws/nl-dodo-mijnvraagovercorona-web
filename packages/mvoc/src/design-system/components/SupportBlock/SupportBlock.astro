---
import type { HTMLAttributes } from 'astro/types';
import { CardSupport } from '@design-system/components/Card';
import { ContentBlock } from '@design-system/components/ContentBlock';
import type { CardsProps } from 'src/utilities/api/queries';
import { Layer } from '@mvoc/ui/components';
import { Heading } from '@mvoc/ui/elements';
import { GridFluid } from '@mvoc/ui/components';
import { Retain } from '@mvoc/ui/components';
import { Stack } from '@mvoc/ui/components';

interface Props extends HTMLAttributes<'div'> {
	label: string;
	cards: CardsProps['items'];
}

const { label, cards } = Astro.props;
---

<Layer data-pagefind-ignore="all">
	<Retain>
		<Stack>
			<Heading>{label}</Heading>
			<GridFluid
				class={`c-support-block__grid${
					cards.length === 3 ? ' c-support-block__grid--three-cards' : ''
				} ${cards.length === 4 ? ' c-support-block__grid--four-cards' : ''}`}
			>
				{
					cards.map(({ title, image, content, buttons }) => (
						<CardSupport title={title} image={image} buttons={buttons}>
							<ContentBlock value={content} />
						</CardSupport>
					))
				}
			</GridFluid>
		</Stack>
	</Retain>
</Layer>

<style lang="scss">
	@use '@mvoc/ui/styles/primitives/responsive';

	.c-support-block__grid {
		--grid-fluid-min-item-size: var(--space-100);
		--grid-fluid-gap: var(--space-4);
	}

	.c-support-block__grid--three-cards {
		@media (--mq-large) {
			--grid-fluid-min-item-size: var(--space-75);
		}
	}

	.c-support-block__grid--four-cards {
		@media (--mq-huge) {
			--grid-fluid-min-item-size: 16rem;
		}
	}
</style>
