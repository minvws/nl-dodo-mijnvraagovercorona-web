---
import { Heading } from '@mvoc/ui/elements';
import { Stack } from '@mvoc/ui/components';
import { Card } from '.';
import { Chapeau } from '@mvoc/ui/elements';
import {
	type ButtonsProps,
	type MultiContentBlocksProps,
} from 'src/utilities/api/queries';
import { MultiContentBlock } from '../ContentBlock';
import { FlexibleButton } from '@modules/elements/FlexibleButton';

interface Props {
	title: string;
	chapeau?: string;
	buttons?: ButtonsProps;
	multiContentBlocks?: MultiContentBlocksProps;
}

const { title, chapeau, buttons, multiContentBlocks } = Astro.props;
---

<Card>
	<Stack gap={4}>
		<hgroup class="c-card-block__hgroup">
			<Heading level={3} styledAs={2}>{title}</Heading>
			{
				chapeau && (
					<Chapeau role="presentation" data-pagefind-ignore>
						{chapeau}
					</Chapeau>
				)
			}
		</hgroup>

		<slot />

		{
			!!buttons?.length ? (
				<ul class="c-card-block__wrap-buttons" role="list">
					{buttons.map((button) => (
						<li>
							<FlexibleButton {...button} />
						</li>
					))}
				</ul>
			) : null
		}
		{
			multiContentBlocks ? (
				<MultiContentBlock multiContentBlocks={multiContentBlocks} />
			) : null
		}

		<slot name="appendix" />
	</Stack>
</Card>

<style lang="scss">
	.c-card-block__hgroup {
		display: flex;
		flex-direction: column-reverse;
		gap: var(--space-2);
	}

	.c-card-block__wrap-buttons {
		display: flex;
		flex-direction: column;
		gap: var(--space-4);
	}
</style>
