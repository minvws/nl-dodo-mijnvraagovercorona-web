---
import { HTMLAttributes } from 'astro/types';
import { ThemeCollectionProps } from 'src/utilities/api/queries/theme';
import { GridFluid } from '@design-system/components/Layout/Grid';
import { Stack } from '@design-system/components/Layout/Stack';
import { Heading } from '@design-system/elements/Heading';
import { Link } from '@design-system/elements/Link';
import {
	Locale,
	getLocaleFromURL,
	prefixUrlWithlocale,
} from 'src/utilities/locale/translation';
import { SiteSettingsProps, useSiteSettings } from 'src/utilities/api/queries';
import { QuestionList } from '.';

interface Props extends ThemeCollectionProps {}

const { themeCollection } = Astro.props;
const locale = getLocaleFromURL(Astro.url.pathname) as Locale;
const siteSettings: SiteSettingsProps = await useSiteSettings({ locale });
---

<GridFluid class="c-theme-overview">
	{
		themeCollection?.map((theme) => (
			<Stack>
				<div class="c-theme-overview__header">
					{theme.overview.icon && theme.overview.icon.src ? (
						<img
							class="c-theme-overview__icon"
							src={theme.overview.icon.src}
							alt=""
						/>
					) : null}
					<hgroup class="c-theme-overview__hgroup">
						<Heading level={3} styledAs={2}>
							<Link href={prefixUrlWithlocale(`/thema/${theme.slug}`, locale)}>
								{theme.overview.title}
							</Link>
						</Heading>
						{theme.questionCollection ? (
							<small class="u-color--donkerblauw">
								{theme.questionCollection.length > 1
									? `${theme.questionCollection.length} ${siteSettings.situationPlural.that}`
									: `${theme.questionCollection.length} ${siteSettings.situationPlural.this}`}
							</small>
						) : null}
					</hgroup>
				</div>

				{theme.questionCollection ? (
					<QuestionList questionCollection={theme.questionCollection} />
				) : null}
			</Stack>
		))
	}
</GridFluid>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';
	.c-theme-overview {
		--grid-fluid-gap: var(--space-r-huge);
		--grid-fluid-min-item-size: 18.3157894737rem; // 384px
		--theme-overview-icon-block-size: 3.7894736842rem; // 72px

		@media --mq-large {
			--grid-fluid-gap: var(--space-r-humongous);
			--grid-fluid-min-item-size: 19.2rem; // 384px
			--theme-overview-icon-block-size: 3.6rem; // 72px
		}
	}

	.c-theme-overview__header {
		display: flex;
		align-items: center;
		gap: var(--space-r-base);
	}

	.c-theme-overview__icon {
		flex: 0 0 auto;
		inline-size: var(--space-r-humongous);
		block-size: var(--theme-overview-icon-block-size);
		object-fit: contain;
	}

	.c-theme-overview__hgroup {
		display: flex;
		align-items: center;
		justify-content: space-between;
		flex-wrap: wrap;
		inline-size: 0%;
		flex: auto;

		:global(a) {
			--link-text-decoration: none;
		}
	}
</style>
