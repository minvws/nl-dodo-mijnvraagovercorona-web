# Default configuration for all pipelines
default:
  tags:
    - default

# Define environment variables that will be used throughout the pipeline
variables:
  CD_ENVIRONMENT: production
  CD_NAMESPACE_BHR: vws-reis-bhr
  CD_HARBOR_REGISTRY: harbor.cicd.s15m.nl

# Define which directories should be cached between pipeline runs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

# Specify the Docker image that will be used to run the pipeline
image: harbor.cicd.s15m.nl/vws-reis/tool-box:1.2

.build-image: &build-image
  environment:
    name: 'test-cluster'
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:v1.3.0-debug
    entrypoint: ['']
  script:
    - echo "${DOCKER_AUTH_CONFIG}" > /kaniko/.docker/config.json
    - cat /kaniko/.docker/config.json
    - echo "CI_PROJECT_DIR ${CI_PROJECT_DIR}"
    - pwd
    - 'echo ${CD_HARBOR_REGISTRY}/vws-reis/${CD_APP_NAME}:${CD_APP_TAG}'
    - /kaniko/executor
      --context ${CI_PROJECT_DIR}
      --dockerfile /packages/${CD_APP_FOLDER}/Dockerfile
      --build-arg buildid=${CD_APP_TAG}
      --destination ${CD_HARBOR_REGISTRY}/vws-reis/${CD_APP_NAME}:${CD_APP_TAG}

# Define the stages that will be used in the pipeline
stages:
  - test
  - build
  - package
  - deploy

before_script:
  - echo "Started by ${GITLAB_USER_LOGIN} at $(date +%Y-%m-%d'-'%H-%M-%S)"
  - export CD_APP_TAG=$(date -d "$(echo $CI_PIPELINE_CREATED_AT | sed 's/T/ /; s/Z//')" +%Y%m%d%H%M)
  - echo ${CI_PIPELINE_CREATED_AT}
  - echo ${CD_APP_TAG}
  - echo "CHANGES_DETECTED - $CHANGES_DETECTED"
  - unset ${HISTFILE} # Disable shell cache for security purposes

test mvoc:
  image: harbor.cicd.s15m.nl/docker-hub-proxy/library/node:20-alpine
  stage: test
  script:
    - npm ci
    - npm run test
  only:
    - develop
    - staging
    - main

build mvoc website development:
  image: harbor.cicd.s15m.nl/docker-hub-proxy/library/node:20-alpine
  stage: build
  script:
    - npm ci
    - npm run mvoc:build
    - mkdir -p artifacts/mvoc
    - cp -r packages/mvoc/dist artifacts/mvoc/
  artifacts:
    paths:
      - artifacts/mvoc/dist/
  only:
    - develop

build mvoc website staging:
  image: harbor.cicd.s15m.nl/docker-hub-proxy/library/node:20-alpine
  stage: build
  script:
    - npm ci
    - npm run mvoc:build
    - mkdir -p artifacts/mvoc
    - cp -r packages/mvoc/dist artifacts/mvoc/
  artifacts:
    paths:
      - artifacts/mvoc/dist/
  only:
    - staging

build mvoc website main:
  image: harbor.cicd.s15m.nl/docker-hub-proxy/library/node:20-alpine
  stage: build
  script:
    - npm ci
    - npm run mvoc:build
    - mkdir -p artifacts/mvoc
    - cp -r packages/mvoc/dist artifacts/mvoc/
  artifacts:
    paths:
      - artifacts/mvoc/dist/
  only:
    - main

build mvoc image:
  <<: *build-image
  variables:
    CD_APP_NAME: mijn-vraag-over-corona-frontend
    CD_APP_FOLDER: mvoc
  before_script:
    - export CD_APP_TAG=$(date -d "$(echo $CI_PIPELINE_CREATED_AT | sed 's/T/ /; s/Z//')" +%Y%m%d%H%M)
    - mkdir -p packages/mvoc
    - cp -r artifacts/mvoc/dist packages/mvoc/
  # dependencies:
  #   - build mvoc
  only:
    - develop
    - main
    - staging

deploy mvoc image development:
  variables:
    CD_APP_NAME: mijn-vraag-over-corona-frontend
    CD_PIPELINE_CREATED_AT: $CI_PIPELINE_CREATED_AT
    CD_ENVIRONMENT: development
  stage: deploy
  trigger:
    project: vws/reis/nl-covid19-travel-during-corona-deploy
    forward:
      pipeline_variables: true
  only:
    - develop

deploy mvoc image staging:
  variables:
    CD_PIPELINE_CREATED_AT: $CI_PIPELINE_CREATED_AT
    CD_ENVIRONMENT: staging
  stage: deploy
  trigger:
    project: vws/reis/nl-covid19-travel-during-corona-deploy
    forward:
      pipeline_variables: true
  only:
    - staging

deploy mvoc image production:
  variables:
    CD_PIPELINE_CREATED_AT: $CI_PIPELINE_CREATED_AT
    CD_ENVIRONMENT: production
  stage: deploy
  trigger:
    project: vws/reis/nl-covid19-travel-during-corona-deploy
    forward:
      pipeline_variables: true
  only:
    - main
