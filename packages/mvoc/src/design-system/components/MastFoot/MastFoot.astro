---
import { Heading } from '@design-system/elements/Heading';
import { ContentBlock } from '@design-system/components/ContentBlock';
import {
	SiteSettingsProps,
	SiteSettingsTranslatedProps,
	useSiteSettings,
	useSiteSettingsTranslated,
} from 'src/utilities/api/queries';
import { Locale, prefixUrlWithlocale } from 'src/utilities/locale/translation';
import { Layer } from '@design-system/components/Layout/Layer';
import { Retain } from '@design-system/components/Layout/Retain';
import { Stack } from '@design-system/components/Layout/Stack';
import { LinkList } from '@design-system/components/Lists';

interface Props {
	locale: Locale;
}

const { locale } = Astro.props;
const siteSettings: SiteSettingsProps = await useSiteSettings({ locale });
const siteSettingsTranslated: SiteSettingsTranslatedProps =
	await useSiteSettingsTranslated({ locale });
console.log('translated', siteSettingsTranslated.mastfoot);
---

<Layer as="footer" class="c-mastfoot" role="contentinfo">
	<Retain>
		<Heading class="u-visually-hidden">
			{siteSettingsTranslated.mastfoot.title}
		</Heading>
		<div class="c-mastfoot__grid">
			{
				siteSettingsTranslated.mastfoot.columns.map((column) => (
					<Stack gap="small">
						<Heading level={3}>{column.title}</Heading>
						{column.content ? <ContentBlock value={column.content} /> : null}
						{column.internalPageCollection ? (
							<LinkList
								links={column.internalPageCollection.map((item) => ({
									label: item.link.label,
									href: prefixUrlWithlocale(item.link.slug, locale),
								}))}
							/>
						) : null}
					</Stack>
				))
			}
		</div>
	</Retain>
</Layer>

<style lang="scss">
	@use '@design-system-styles/primitives/_responsive.scss';

	.c-mastfoot {
		background-color: var(--color-ijsblauw);

		:global(h2),
		:global(h3) {
			color: currentColor;
		}
	}

	.c-mastfoot__grid {
		display: grid;
		grid-template-columns: 1fr;
		gap: var(--stack-humongous);

		@media --mq-large {
			grid-template-columns: 1fr 1fr 1fr;
		}
	}
</style>
