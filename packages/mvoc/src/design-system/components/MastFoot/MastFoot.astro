---
import Sprite from 'astro-icon';
import { Heading } from '@design-system/elements/Heading';
import { ContentBlock } from '@design-system/components/ContentBlock';
import { SiteSettingsProps, useSiteSettings } from 'src/utilities/api/queries';
import { Locale, prefixUrlWithlocale } from 'src/utilities/locale/translation';
import { Layer } from '@design-system/components/Layout/Layer';
import { Retain } from '@design-system/components/Layout/Retain';
import { Stack } from '@design-system/components/Layout/Stack';
import { LinkList } from '@design-system/components/Lists';
import { GridFluid } from '../Layout/Grid';

interface Props {
	locale: Locale;
}

const { locale } = Astro.props;
const siteSettingsTranslated: SiteSettingsProps = await useSiteSettings({
	locale,
});
---

<footer class="c-mastfoot" role="contentinfo">
	<Retain>
		<div class="c-mastfoot__wrap-logo">
			<a class="c-mastfoot__logo" href={locale.urlPrefix}>
				<Sprite
					class="c-mastfoot__logo-visual"
					name="logo-vws"
					optimize={true}
				/>
				<span class="u-visually-hidden">{siteSettingsTranslated.logo.alt}</span>
			</a>
		</div>
	</Retain>
	<Layer as="div" class="c-mastfoot__layer">
		<Retain>
			<Heading class="u-visually-hidden">
				{siteSettingsTranslated.mastfoot.title}
			</Heading>
			<GridFluid class="c-mastfoot__grid">
				{
					siteSettingsTranslated.mastfoot.columns.map((column) => (
						<Stack gap={4}>
							<Heading level={3}>{column.title}</Heading>
							{column.content ? <ContentBlock value={column.content} /> : null}
							{column.internalPageCollection ? (
								<LinkList
									links={column.internalPageCollection.map((item) => ({
										label: item.label
											? item.label
											: typeof item.link.label === 'object'
											? item.link.label[locale.id]
											: item.link.label,
										href: prefixUrlWithlocale(item.link.slug, locale),
									}))}
								/>
							) : null}
						</Stack>
					))
				}
			</GridFluid>
		</Retain>
	</Layer>
</footer>

<style lang="scss">
	@use '@design-system-styles/tools/_rem.scss';
	@use '@design-system-styles/primitives/_responsive.scss';

	.c-mastfoot {
		margin-block-start: auto;
		background-color: var(--color-donkerblauw);
		color: var(--color-white);

		:global(h2),
		:global(h3) {
			color: currentColor;
		}

		:global(a) {
			color: currentColor;
		}
	}

	.c-mastfoot__layer {
		--layer-padding-block-start: var(--space-10);

		@media --mq-large {
			--layer-padding-block-start: var(--space-8);
		}
	}

	.c-mastfoot__grid {
		--grid-fluid-min-item-size: var(--space-100);
		--grid-fluid-gap: var(--space-10);

		@media --mq-large {
			--grid-fluid-gap: var(--space-14);
		}
	}

	// Logo
	.c-mastfoot__wrap-logo {
		display: grid;
		grid-template-columns: 1fr 1fr;
	}

	/**
	 * 1. The banner width is a percentage of the whole image, we need to pull the
	 *    banner in the center.
	 */
	.c-mastfoot__logo {
		--logo-banner-percentage: 19.15%; /* [1] */
		grid-column-start: 2;
		justify-self: start;
		inline-size: 100%;
		max-inline-size: #{rem.convert(193px)};
		transform: translateX(
			calc(var(--logo-banner-percentage) / 2 * -1)
		); /* [1] */
		color: currentcolor;

		&:focus {
			outline: var(--elevation-focusring);
			outline-offset: 2px;
		}
	}

	.c-mastfoot__logo-visual {
		display: block;
		inline-size: 100%;
	}

	// Locale selector
	.c-mastfoot__layer-locale {
		--layer-padding: var(--space-8);
		background-color: var(--color-white);
	}

	.c-mastfoot__locale-selector {
		:global(> * + *) {
			margin-block-start: var(--space-6);
		}

		:global(ul) {
			display: flex;
			flex-flow: row wrap;
			gap: var(--space-4);

			:global(a) {
				--link-color: var(--color-diepblauw);
				--link-text-decoration: none;
				display: block;
				padding-block: 0.5em;
				padding-inline: 1em;
				border: 1px solid var(--color-donkerblauw);
				font-weight: bold;

				&[aria-current] {
					background-color: var(--color-lichtblauw);
				}

				&:hover {
					background-color: var(--color-poolblauw);
				}
			}
		}
	}
</style>
